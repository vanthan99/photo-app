{"version":3,"sources":["assets/images/colorful-bg.jpg","assets/images/pink-bg.jpg","components/Banner/index.jsx","constants/images.js","features/Photo/components/PhotoCard/index.jsx","features/Photo/components/PhotoList/index.jsx","features/Photo/pages/MainPage/index.jsx","constants/global.js","custom-fields/InputField/index.jsx","components/RandomPhoto/index.jsx","custom-fields/RandomPhotoField/index.jsx","custom-fields/SelectField/index.jsx","features/Photo/components/PhotoForm/index.jsx","features/Photo/pages/EditPage/index.jsx","features/Photo/index.js","assets/images/orange-bg.jpg","assets/images/blue-bg.jpg"],"names":["module","exports","Banner","props","title","backgroundUrl","bannerStyle","backgroundImage","className","style","defaultProps","Images","ORANGE_BG","orangeBackground","BLUE_BG","blueBackground","COLORFUL_BG","colorfulBackground","PINK_BG","pinkBackground","PhotoCard","photo","onEditClick","onRemoveClick","src","alt","Button","outline","size","color","onClick","PhotoList","photoList","onPhotoEditClick","onPhotoRemoveClick","Row","map","Col","key","xs","md","lg","MainPage","photos","useSelector","state","dispatch","useDispatch","console","log","history","useHistory","Container","to","editPhotoUrl","id","push","removePhotoId","action","removePhoto","PHOTO_CATEGORY_OPTIONS","value","label","InputField","field","form","type","placeholder","disabled","name","errors","onChange","onBlur","touched","showError","FormGroup","Label","for","Input","invalid","component","FormFeedback","RandomPhoto","imageUrl","onImageUrlChange","onRandomButtonBlur","getRandomImageUrl","randomId","Math","trunc","random","handleRandomPhotoClick","a","randomImageUrl","onError","RandomPhotoField","newImageUrl","setFieldValue","SelectField","options","selectedOption","find","option","selectedValue","changeEvent","target","isDisabled","PhotoForm","initialValues","isAddMode","validationSchema","Yup","shape","required","categoryId","nullable","onSubmit","formikProps","values","EditPage","dispath","photoId","useParams","editedPhoto","x","addPhoto","updatePhoto","Photo","match","useRouteMatch","exact","path","url"],"mappings":"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","file":"static/js/4.03d25a65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/colorful-bg.cb9ae265.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pink-bg.c8426a37.jpg\";","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport './Banner.scss';\r\n\r\nBanner.propTypes = {\r\n  title: PropTypes.string,\r\n  backgroundUrl: PropTypes.string,\r\n};\r\n\r\nBanner.defaultProps = {\r\n  title: '',\r\n  backgroundUrl: '',\r\n}\r\n\r\nfunction Banner(props) {\r\n  const { title, backgroundUrl } = props;\r\n\r\n  const bannerStyle = backgroundUrl\r\n    ? { backgroundImage: `url(${backgroundUrl})` }\r\n    : {}\r\n\r\n  return (\r\n    <section className=\"banner\" style={bannerStyle}>\r\n      <h1 className=\"banner__title\">{title}</h1>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Banner;","\r\nimport orangeBackground from '../assets/images/orange-bg.jpg';\r\nimport blueBackground from '../assets/images/blue-bg.jpg';\r\nimport colorfulBackground from '../assets/images/colorful-bg.jpg';\r\nimport pinkBackground from '../assets/images/pink-bg.jpg';\r\n\r\nconst Images = {\r\n  ORANGE_BG: orangeBackground,\r\n  BLUE_BG: blueBackground,\r\n  COLORFUL_BG: colorfulBackground,\r\n  PINK_BG: pinkBackground\r\n}\r\n\r\nexport default Images;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport './PhotoCard.scss';\r\n\r\nPhotoCard.propTypes = {\r\n  photo: PropTypes.object,\r\n  onEditClick: PropTypes.func,\r\n  onRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoCard.defaultProps = {\r\n  photo: {},\r\n  onEditClick: null,\r\n  onRemoveClick: null,\r\n}\r\n\r\nfunction PhotoCard(props) {\r\n  const { photo, onEditClick, onRemoveClick } = props;\r\n\r\n  const handleEditClick = () => {\r\n    if (onEditClick) onEditClick(photo);\r\n  }\r\n\r\n  const handleRemoveClick = () => {\r\n    if (onRemoveClick) onRemoveClick(photo);\r\n  }\r\n\r\n  return (\r\n    <div className=\"photo\">\r\n      <img src={photo.photo} alt={photo.title} />\r\n\r\n      <div className=\"photo__overlay\">\r\n        <h3 className=\"photo__title\">{photo.title}</h3>\r\n\r\n        <div className=\"photo__actions\">\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"light\" onClick={handleEditClick}>\r\n              Edit\r\n            </Button>\r\n          </div>\r\n\r\n          <div>\r\n            <Button outline size=\"sm\" color=\"danger\" onClick={handleRemoveClick}>\r\n              Remove\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhotoCard;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\nimport PhotoCard from '../PhotoCard';\r\n\r\nPhotoList.propTypes = {\r\n  photoList: PropTypes.array,\r\n  onPhotoEditClick: PropTypes.func,\r\n  onPhotoRemoveClick: PropTypes.func,\r\n};\r\n\r\nPhotoList.defaultProps = {\r\n  photoList: [],\r\n  onPhotoEditClick: null,\r\n  onPhotoRemoveClick: null,\r\n};\r\n\r\nfunction PhotoList(props) {\r\n  const { photoList, onPhotoEditClick, onPhotoRemoveClick } = props;\r\n\r\n  return (\r\n    <Row>\r\n      {photoList.map(photo => (\r\n        <Col key={photo.title} xs=\"12\" md=\"6\" lg=\"3\">\r\n          <PhotoCard\r\n            photo={photo}\r\n            onEditClick={onPhotoEditClick}\r\n            onRemoveClick={onPhotoRemoveClick}\r\n          />\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default PhotoList;","import Banner from 'components/Banner';\r\nimport Images from 'constants/images';\r\nimport PhotoList from 'features/Photo/components/PhotoList';\r\nimport { removePhoto } from 'features/Photo/photoSlice';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\n\r\nMainPage.propTypes = {\r\n\r\n};\r\n\r\nfunction MainPage(props) {\r\n    const photos = useSelector((state) => state.photos)\r\n    const dispatch = useDispatch();\r\n    console.log(\"list photo: \", photos);\r\n    const history = useHistory();\r\n    const handlePhotoEditClick = (photo) => {\r\n        console.log('Edit: ', photo);\r\n        const editPhotoUrl = `/photos/${photo.id}`;\r\n        history.push(editPhotoUrl);\r\n    }\r\n\r\n    const handlePhotoRemoveClick = (photo) => {\r\n        console.log('Remove: ', photo);\r\n        const removePhotoId = photo.id;\r\n        const action = removePhoto(removePhotoId);\r\n        dispatch(action);\r\n    }\r\n    return (\r\n        <div className='photo-main'>\r\n            <Banner title=\"Your awesome photos 🎉\" backgroundUrl={Images.PINK_BG}></Banner>\r\n            <Container className=\"text-center\">\r\n                <Link to='/photos/add'>Add new photo</Link>\r\n\r\n                <PhotoList\r\n                    photoList={photos}\r\n                    onPhotoEditClick={handlePhotoEditClick}\r\n                    onPhotoRemoveClick={handlePhotoRemoveClick}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainPage;","export const PHOTO_CATEGORY_OPTIONS = [\r\n    { value: 1, label: 'Technology' },\r\n    { value: 2, label: 'Education' },\r\n    { value: 3, label: 'Nature' },\r\n    { value: 4, label: 'Animals' },\r\n    { value: 5, label: 'Styles' },\r\n  ];","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { FormGroup, Input, Label, FormFeedback } from 'reactstrap';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nInputField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  type: 'text',\r\n  label: '',\r\n  placeholder: '',\r\n  disabled: false,\r\n}\r\n\r\nfunction InputField(props) {\r\n  const {\r\n    field, form,\r\n    type,label,placeholder,disabled,\r\n  } = props;\r\n\r\n  const {name, value, onChange, onBlur} = field;\r\n\r\n  const {errors, touched} = form;\r\n  const showError = errors[name] && touched[name];\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n      <Input \r\n      id={name}\r\n      type={type}\r\n      disabled={disabled}\r\n      placeholder={placeholder} \r\n      {...field}   \r\n      invalid={showError}     \r\n      />\r\n      <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default InputField;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport './RandomPhoto.scss';\r\n\r\nRandomPhoto.propTypes = {\r\n  name: PropTypes.string,\r\n  imageUrl: PropTypes.string,\r\n  onImageUrlChange: PropTypes.func,\r\n  onRandomButtonBlur: PropTypes.func,\r\n};\r\n\r\nRandomPhoto.defaultProps = {\r\n  name: '',\r\n  imageUrl: '',\r\n  onImageUrlChange: null,\r\n  onRandomButtonBlur: null,\r\n}\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/300/300`;\r\n}\r\n\r\nfunction RandomPhoto(props) {\r\n  const { name, imageUrl, onImageUrlChange, onRandomButtonBlur } = props;\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if (onImageUrlChange) {\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onImageUrlChange(randomImageUrl)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"random-photo\">\r\n      <div className=\"random-photo__button\">\r\n        <Button\r\n          outline\r\n          name={name}\r\n          color=\"primary\"\r\n          onBlur={onRandomButtonBlur}\r\n          onClick={handleRandomPhotoClick}\r\n        >\r\n          Random a photo\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"random-photo__photo\">\r\n        {imageUrl && (\r\n          <img src={imageUrl} \r\n          alt=\"Ooops ... not found. Please click random again!\"\r\n          onError={handleRandomPhotoClick}\r\n          />)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RandomPhoto;","import RandomPhoto from 'components/RandomPhoto';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nRandomPhotoField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  form: PropTypes.object.isRequired,\r\n\r\n  label: PropTypes.string,\r\n};\r\n\r\nRandomPhotoField.defaultProps = {\r\n  label: '',\r\n}\r\n\r\nfunction RandomPhotoField(props) {\r\n  const { field, form, label } = props;\r\n  const { name, value, onBlur } = field;\r\n\r\n  const handleImageUrlChange = (newImageUrl) => {\r\n    form.setFieldValue(name, newImageUrl)\r\n  }\r\n\r\n  const { errors, touched } = form;\r\n  const showError = errors[name] && touched[name];\r\n\r\n  return (\r\n    <FormGroup>\r\n      {label && <Label for={name}>{label}</Label>}\r\n\r\n      <RandomPhoto\r\n        name={name}\r\n        imageUrl={value}\r\n        onImageUrlChange={handleImageUrlChange}\r\n        onRandomButtonBlur={onBlur}\r\n      />\r\n      <div className={showError?\"is-invalid\":\"\"}></div>\r\n      <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nexport default RandomPhotoField;","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport { FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { ErrorMessage } from 'formik';\r\n\r\nSelectField.propTypes = {\r\n    field: PropTypes.object.isRequired,\r\n    form: PropTypes.object.isRequired,\r\n\r\n    label: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    options: PropTypes.array,\r\n};\r\n\r\nSelectField.defaultProps = {\r\n    label: '',\r\n    placeholder: '',\r\n    disabled: false,\r\n    options: [],\r\n}\r\n\r\nfunction SelectField(props) {\r\n    const { field,form,  options, label, placeholder, disabled } = props;\r\n    const { name, value } = field;\r\n    const selectedOption = options.find(option => option.value === value);\r\n\r\n    const { errors, touched } = form;\r\n    const showError = errors[name] && touched[name];\r\n\r\n    const handleSelectedOptionChange = (selectedOption) => {\r\n        const selectedValue = selectedOption ? selectedOption.value : selectedOption;\r\n\r\n        const changeEvent = {\r\n            target: {\r\n                name: name,\r\n                value: selectedValue\r\n            }\r\n        };\r\n        field.onChange(changeEvent);\r\n    }\r\n\r\n    return (\r\n        <FormGroup>\r\n            {label && <Label for={name}>{label}</Label>}\r\n\r\n            <Select\r\n                id={name}\r\n                {...field}\r\n                value={selectedOption}\r\n                onChange={handleSelectedOptionChange}\r\n\r\n                placeholder={placeholder}\r\n                isDisabled={disabled}\r\n                options={options}\r\n                className={showError ? 'is-invalid' : ''}\r\n            />\r\n            <ErrorMessage name={name} component={FormFeedback}></ErrorMessage>\r\n        </FormGroup>\r\n    );\r\n}\r\n\r\nexport default SelectField;","\r\nimport { PHOTO_CATEGORY_OPTIONS } from 'constants/global';\r\nimport InputField from 'custom-fields/InputField';\r\nimport RandomPhotoField from 'custom-fields/RandomPhotoField';\r\nimport SelectField from 'custom-fields/SelectField';\r\nimport { FastField, Form, Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Button, FormGroup } from 'reactstrap';\r\nimport * as Yup from 'yup';\r\n\r\n\r\nPhotoForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nPhotoForm.defaultProps = {\r\n  onSubmit: null,\r\n}\r\n\r\nfunction PhotoForm(props) {\r\n  // npm i --save react-select\r\n  const { initialValues, isAddMode } = props;\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required(\"this field is required!\"),\r\n\r\n    categoryId: Yup.number().required().nullable(),\r\n\r\n    photo: Yup.string().required(\"this field is required!\"),\r\n  })\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      onSubmit={props.onSubmit}\r\n      validationSchema={validationSchema}\r\n    >\r\n      {formikProps => {\r\n        // do something here...\r\n        const { values, errors, touched } = formikProps;\r\n        console.log({ values, errors, touched });\r\n        return (\r\n          <Form>\r\n            <FastField\r\n              name=\"title\"\r\n              component={InputField}\r\n\r\n              label=\"Title\"\r\n              placeholder=\"Eg: Wow nature ...\"\r\n            />\r\n\r\n            <FastField\r\n              name=\"categoryId\"\r\n              component={SelectField}\r\n\r\n              label=\"Cateogory\"\r\n              placeholder=\"What's your photo category?\"\r\n              options={PHOTO_CATEGORY_OPTIONS}\r\n            />\r\n\r\n            <FastField\r\n              name=\"photo\"\r\n              component={RandomPhotoField}\r\n            />\r\n\r\n            <FormGroup>\r\n              <Button\r\n                type=\"submit\"\r\n                color={isAddMode?'info':'primary'}\r\n              >\r\n                {isAddMode ? \"Add to album\" : \"update to album\"}\r\n              </Button>\r\n            </FormGroup>\r\n          </Form>\r\n        )\r\n      }}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default PhotoForm;\r\n","import Banner from 'components/Banner';\r\nimport PhotoForm from 'features/Photo/components/PhotoForm';\r\nimport { addPhoto, updatePhoto } from 'features/Photo/photoSlice';\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport './EditPage.scss';\r\nEditPage.propTypes = {\r\n\r\n};\r\n\r\nfunction EditPage(props) {\r\n    const dispath = useDispatch();\r\n    const history = useHistory()\r\n    const { photoId } = useParams();\r\n    const isAddMode = !photoId;\r\n\r\n    const editedPhoto = useSelector(state => state.photos.find(x => x.id === +photoId));\r\n\r\n    const initialValues = isAddMode ? {\r\n        title: '',\r\n        categoryId: null,\r\n        photo: '',\r\n    } : editedPhoto;\r\n    const handleSubmit = (values) => {\r\n        if (isAddMode) {\r\n            const action = addPhoto(values);\r\n            console.log({ action });\r\n            dispath(action);\r\n        }\r\n        else{\r\n            const action = updatePhoto(values);\r\n            dispath(action);\r\n        }\r\n\r\n        history.push('/photos')\r\n    }\r\n    return (\r\n        <div className='photo-edit'>\r\n            <Banner title=\"Pick your amazing photos 🎉 \"></Banner>\r\n            <div className=\"photo-edit__form\">\r\n                <PhotoForm\r\n                    initialValues={initialValues}\r\n                    onSubmit={handleSubmit}\r\n                    isAddMode = {isAddMode}\r\n                ></PhotoForm>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { BrowserRouter, Redirect, Route, Switch, Link } from 'react-router-dom';\r\nimport MainPage from './pages/MainPage';\r\nimport EditPage from './pages/EditPage';\r\n\r\nPhoto.propTypes = {\r\n    \r\n};\r\n\r\nfunction Photo(props) {\r\n    const match = useRouteMatch();\r\n    console.log({match});\r\n    \r\n    return (\r\n        <Switch>\r\n            <Route exact path={match.url} component={MainPage} />\r\n\r\n            <Route path={`${match.url}/add`} component={EditPage} />\r\n            <Route path={`${match.url}/:photoId`} component={EditPage} />\r\n            \r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Photo;","module.exports = __webpack_public_path__ + \"static/media/orange-bg.e6624e7e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/blue-bg.146c36c8.jpg\";"],"sourceRoot":""}